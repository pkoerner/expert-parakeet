{:paths ["resources" "src/cljc"]

 :aliases {:dev {:extra-paths ["dev-resources" "classes"]
                 :extra-deps {org.clojure/clojure {:mvn/version "1.11.1"}
                              thheller/shadow-cljs {:mvn/version "2.18.0"}
                              clj-kondo/clj-kondo {:mvn/version "2022.04.25"}
                              day8.re-frame/re-frame-10x {:mvn/version "0.7.0"}
                              metosin/reagent-dev-tools {:mvn/version "0.2.1"}}}
           ;; Let's learn to use a common part already now since in the next exercise we create frontend with re-frame.
           :common {:extra-paths ["src/cljc"]
                    :extra-deps {}}
           :backend {:extra-paths ["src/clj"]
                     :extra-deps {ring/ring {:mvn/version "1.9.5"}}}

           :frontend {:extra-paths ["src/cljs"]
                      :extra-deps {org.clojure/clojurescript {:mvn/version "1.11.54"}
                                   reagent/reagent {:mvn/version "0.10.0"
                                                    :exclusions [cljsjs.react-dom/cljsjs.react-dom]}
                                   re-frame/re-frame {:mvn/version "1.1.1"}}}
           :css {:extra-deps {deraen/sass4clj {:mvn/version "0.5.1"}
                              ch.qos.logback/logback-classic {:mvn/version "1.3.0-alpha5"}}
                 :main-opts ["-m" "sass4clj.main"
                             "--source-paths" "src/cljs/simplefrontend"
                             "--inputs" "main.scss"
                             "--target-path" "target/shadow/dev/resources/public/css"]}
           :shadow-cljs {:main-opts ["-m" "shadow.cljs.devtools.cli"]}

           ;; Test runner in console.
           :test-runner {:extra-paths ["test"]
                         :extra-deps {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                                                 :sha "a85b3b02765fb68684ab9ee4a8598eacf7e471d2"}}

                         :main-opts ["-m" "cognitect.test-runner"]}


           :outdated {:extra-deps {olical/depot {:mvn/version "RELEASE"}}
                      :main-opts ["-m" "depot.outdated.main" "-a" "outdated"]}
           :clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2022.04.25"}}
                       :main-opts ["-m" "clj-kondo.main"]}
           ;; Cider specific.
           :cider-clj {:extra-deps {org.clojure/clojure {:mvn/version "1.11.1"}
                                    cider/cider-nrepl {:mvn/version "0.22.4"}}
                       :main-opts ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware]"]}

           ;;TODO: use tools.build
           :uberjar {}}}
