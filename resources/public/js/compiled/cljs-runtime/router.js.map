{"version":3,"sources":["router.cljs"],"mappings":"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","names":["router/href","reitit.frontend.easy/href","re-frame.core/reg-fx","p__28005","map__28006","cljs.core/--destructure-map","cljs.core.get","name","path-params","query-params","cljs.core.apply","reitit.frontend.easy/push-state","re_frame.core.reg_event_fx","p__28007","vec__28008","seq__28009","cljs.core/seq","first__28010","cljs.core/first","cljs.core/next","_","route","re_frame.core.reg_event_db","p__28011","vec__28012","cljs.core.nth","db","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","cljs.core.assoc","re_frame.core.reg_sub","router/routes","studierenden-uebersicht.views/overview","re-frame.core/dispatch","korrektur-uebersicht.views/overview","korrektur-uebersicht.views/previous-corrections","test.views/Root","cljs.core/int?","params","cljs.core.get_in","orga.frage-erstellen.views/frage-erstellen","korrektur.views/overview","router/on-navigate","router/router","reitit.frontend.router","reitit.coercion.spec/coercion","router/init-routes!","js/console.log","reitit.frontend.easy/start!","p__28015","map__28016","router/nav","dests","router","current-route","iter__5523__auto__","s__28018","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__28020","cljs.core/chunk-buffer","i__28019","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__28017","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","route-name","reitit.core/match-by-name","text","active","cljs.core._EQ_","p__28021","map__28022","router/router-component","cljs.core/deref","re_frame.core.subscribe","cljs.core/chunk-first"],"sourcesContent":["(ns router\n  (:require\n    [korrektur-uebersicht.views :as korr]\n    [korrektur.views :as korrektur]\n    [orga.frage-erstellen.views :as frage-erstln]\n    [re-frame.core :as re-frame]\n    [reitit.coercion.spec :as rss]\n    [reitit.core :as r]\n    [reitit.frontend :as rf]\n    [reitit.frontend.controllers :as rfc]\n    [reitit.frontend.easy :as rfe]\n    [studierenden-uebersicht.views :as stud]\n    [test.views :as test]))\n\n\n(def href rfe/href)\n\n\n;; Effects ;;;\n\n;; Triggering navigation from events.\n\n(re-frame/reg-fx :push-state\n                 (fn [{:keys [name path-params query-params]}]\n                   (apply rfe/push-state name path-params query-params)))\n\n\n;; Events ;;;\n\n(re-frame/reg-event-fx ::push-state\n                       (fn [_ [_ & route]]\n                         {:push-state route}))\n\n\n(re-frame/reg-event-db ::navigated\n                       (fn [db [_ new-match]]\n                         (let [old-match   (:current-route db)\n                               controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n                           (assoc db :current-route (assoc new-match :controllers controllers)))))\n\n\n;; Subscriptions ;;;\n\n(re-frame/reg-sub ::current-route\n                  (fn [db]\n                    (:current-route db)))\n\n\n;; Routes ;;;\n\n(def routes\n  [\"/\"\n   [\"\"\n    {:name      ::overview\n     :view      stud/overview\n     :link-text \"\u00dcbersicht\"\n     :controllers\n     [{:start #(re-frame/dispatch [:kurse/laden])\n       :stop  #(re-frame/dispatch [:kurse/entfernen])}]}]\n   [\"korrektur-uebersicht\"\n    {:name      ::korrektur-overview\n     :view      korr/overview\n     :link-text \"Korrektur-\u00dcbersicht\"\n     :controllers\n     [{:start #(re-frame/dispatch [:korrektur-uebersicht/hole-unkorrigierte-antworten])\n       :stop  #(re-frame/dispatch [:korrektur-uebersicht/entferne-unkorrigierte-antworten])}]}]\n   [\"bisherige-korrekturen\"\n    {:name      ::bisherige-korekturen\n     :view      korr/previous-corrections\n     :link-text \"Korrektur-\u00dcbersicht\"\n     :controllers\n     [{:start #(re-frame/dispatch [:korrektur-uebersicht/hole-korrigierte-antworten])\n       :stop  #(re-frame/dispatch [:korrektur-uebersicht/entferne-korrigierte-antworten])}]}]\n   [\"test/:id\"\n    {:name      ::test\n     :view      test/Root\n     :link-text \"Test\"\n     :parameters {:path {:id int?}}\n     :controllers\n     [{:parameters {:path [:id]}\n       :start (fn [params]\n                (re-frame/dispatch [:test/laden (get-in params [:path :id])]))\n       :stop (fn [_]\n               (re-frame/dispatch [:test/entfernen]))}]}]\n   [\"frage/erstellen\"\n    {:name      ::frage-erstellen\n     :view      frage-erstln/frage-erstellen\n     :link-text \"Neue Frage erstellen\"\n     :controllers\n     [{:start #(re-frame/dispatch [:frage-erstellen/init])\n       :stop  #(re-frame/dispatch [:frage-erstellen/entfernen])}]}]\n   [\"antwort-fuer-korrektur/:aid\"\n    {:name      ::korrektur\n     :view      korrektur/overview\n     :link-text \"Korrektur\"\n     :parameters {:path {:aid int?}}\n     :controllers\n     [{:parameters {:path [:aid]}\n       :start (fn [params]\n                (re-frame/dispatch [:korrektur/laden (get-in params [:path :aid])]))\n       :stop (fn [_]\n               (re-frame/dispatch [:korrektur/entfernen]))}]}]])\n\n\n(defn on-navigate\n  [new-match]\n  (when new-match\n    (re-frame/dispatch [::navigated new-match])))\n\n\n(def router\n  (rf/router\n    routes\n    {:data {:coercion rss/coercion}}))\n\n\n(defn init-routes!\n  []\n  (js/console.log \"initializing routes\")\n  (rfe/start!\n    router\n    on-navigate\n    {:use-fragment false}))\n\n\n;; Views\n\n(defn nav\n  [{:keys [dests router current-route]}]\n  [:ul\n   (for [route-name dests\n         :let       [route (r/match-by-name router route-name)\n                     text (-> route :data :link-text)\n                     active (= route-name (-> current-route :data :name))]]\n     [:li {:key route-name}\n      (if active\n        ;; active link\n        [:a {:href (href route-name)\n             :style {:color \"red\"}} text]\n        ;; Create a normal links that user can click\n        [:a {:href (href route-name)} text])])])\n\n\n(defn router-component\n  [{:keys [router]}]\n  (let [current-route @(re-frame/subscribe [::current-route])]\n    [:div\n     [nav {:dests [::overview ::korrektur-overview ::frage-erstellen] :router router :current-route current-route}]\n     (when current-route\n       [(-> current-route :data :view)])]))\n\n"]}