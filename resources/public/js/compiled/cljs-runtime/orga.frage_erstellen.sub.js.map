{"version":3,"sources":["orga/frage_erstellen/sub.cljs"],"mappings":";AAKA,2DAAA,3DAACA,iMAEC,WAAKC,GAAGC;AAAR,AAAW,OAAA,qFAAQD;;AAGrB,2DAAA,3DAACD,8LAEC,WAAKC,GAAGC;AAAR,AAAW,yDAAA,mFAAA,uDAAA,5LAACC,+CAAOF;;AAGrB,2DAAA,3DAACD,sMAEC,WAAKC,GAAGC;AAAR,AAAW,yDAAA,mFAAA,uDAAA,5LAACC,+CAAOF;;AAGrB,2DAAA,3DAACD,gOAEC,WAAKC,GAAGC;AAAR,AAAW,yDAAA,mFAAA,uDAAA,5LAACC,+CAAOF;;AAGrB,2DAAA,3DAACD,sOAEC,WAAKC,GAAGC;AAAR,AAAW,yDAAA,mFAAA,uDAAA,5LAACC,+CAAOF;;AAGrB,2DAAA,3DAACD,wNAEC,WAAKC,GAAGC;AAAR,AAAW,yDAAA,mFAAA,uDAAA,5LAACC,+CAAOF","names":["re_frame.core.reg_sub","db","_","cljs.core.get_in"],"sourcesContent":["(ns orga.frage-erstellen.sub\n  (:require\n    [re-frame.core :as rf]))\n\n\n(rf/reg-sub\n  :frage-erstellen/frage\n  (fn [db _] (:frage db)))\n\n\n(rf/reg-sub\n  :frage-erstellen/typ\n  (fn [db _] (get-in db [:frage :frage/typ])))\n\n\n(rf/reg-sub\n  :frage-erstellen/choices\n  (fn [db _] (get-in db [:frage :frage/choices])))\n\n\n(rf/reg-sub\n  :frage-erstellen/single-choice-loesung\n  (fn [db _] (get-in db [:frage :frage/single-choice-loesung])))\n\n\n(rf/reg-sub\n  :frage-erstellen/multiple-choice-loesung\n  (fn [db _] (get-in db [:frage :frage/multiple-choice-loesung])))\n\n\n(rf/reg-sub\n  :frage-erstellen/loesungskriterien\n  (fn [db _] (get-in db [:frage :frage/loesungskriterien])))\n"]}